version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=sqlite:///data/app.db
      - REDIS_URL=redis://redis:6379
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DEBUG=false
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5000,https://*.replit.app
    depends_on:
      chroma:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["/app/venv/bin/python", "-c", "from api.app.background import job_queue; import asyncio; asyncio.run(job_queue.start_worker())"]
    environment:
      - DATABASE_URL=sqlite:///data/app.db
      - REDIS_URL=redis://redis:6379
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_healthy
      chroma:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped

  # Frontend (Next.js)
  ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  # ChromaDB Vector Database
  chroma:
    image: ghcr.io/chroma-core/chroma:0.4.18
    volumes:
      - chroma_data:/chroma/chroma
    ports:
      - "8000:8000"
    environment:
      - ALLOW_RESET=true
      - ANONYMIZED_TELEMETRY=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped

  # Redis for job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  chroma_data:
  redis_data: